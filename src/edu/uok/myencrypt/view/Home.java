package edu.uok.myencrypt.view;

import edu.uok.myencrypt.service.EncryptService;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.io.*;

/**
 * Created by Renuka on 06/03/2016.
 */
class Home extends javax.swing.JFrame {

    private final JFileChooser fileChooser = new JFileChooser();
    private final FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Documents (*.txt)", "txt");

    /**
     * Creates new form Home
     */
    Home() {
        initComponents();
        setLocationRelativeTo(null);
        inputTextArea.requestFocus();
        inputTextArea.setSelectionStart(0);
        inputTextArea.setSelectionEnd(inputTextArea.getText().length());
        setIconImage(new ImageIcon("/images/icon.png").getImage());
        fileChooser.setFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel mainPanel = new JPanel();
        JLabel nameLabel = new JLabel();
        JLabel companyLabel = new JLabel();
        JButton encryptButton = new JButton();
        JPanel jPanel1 = new JPanel();
        JButton saveButton = new JButton();
        JLabel jLabel1 = new JLabel();
        JScrollPane jScrollPane1 = new JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        JButton copyButton = new JButton();
        JPanel jPanel2 = new JPanel();
        JButton openButton = new JButton();
        JLabel jLabel3 = new JLabel();
        JScrollPane jScrollPane3 = new JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        JButton pasteButton = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Encrypt v2.0");
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        nameLabel.setFont(new java.awt.Font("Segoe UI Light", Font.PLAIN, 48)); // NOI18N
        nameLabel.setText("My Encrypt v2.0");

        companyLabel.setFont(new java.awt.Font("Segoe UI Light", Font.PLAIN, 16)); // NOI18N
        companyLabel.setForeground(new java.awt.Color(153, 153, 153));
        companyLabel.setText("Â©2016 MyEncrypt");
        companyLabel.setToolTipText("About My Encrypt");
        companyLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        companyLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                companyLabelMousePressed();
            }
        });

        encryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_over.png"))); // NOI18N
        encryptButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encryptButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_nrml.png"))); // NOI18N
        encryptButton.addActionListener(evt -> encryptButtonActionPerformed());

        jPanel1.setBackground(new java.awt.Color(212, 240, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveButton.setToolTipText("Save Result");
        saveButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.addActionListener(evt2 -> saveButtonActionPerformed());
        jPanel1.add(saveButton);
        saveButton.setBounds(10, 10, 30, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 12)); // NOI18N
        jLabel1.setText("Encrypted or Decrypted Message");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(80, 20, 190, 20);

        outputTextArea.setColumns(20);
        outputTextArea.setFont(new java.awt.Font("Segoe UI Semilight", Font.PLAIN, 18)); // NOI18N
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 620, 140);

        copyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/copy.png"))); // NOI18N
        copyButton.setToolTipText("Copy Result");
        copyButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        copyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        copyButton.addActionListener(evt1 -> copyButtonActionPerformed());
        jPanel1.add(copyButton);
        copyButton.setBounds(40, 10, 30, 30);

        jPanel2.setBackground(new java.awt.Color(212, 240, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(null);

        openButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        openButton.setToolTipText("Open text file");
        openButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        openButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        openButton.addActionListener(evt1 -> openButtonActionPerformed());
        jPanel2.add(openButton);
        openButton.setBounds(10, 10, 30, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 12)); // NOI18N
        jLabel3.setText("Message to Encrypt or Decrypt");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(80, 20, 170, 20);

        inputTextArea.setColumns(20);
        inputTextArea.setFont(new java.awt.Font("Segoe UI Semilight", Font.PLAIN, 18)); // NOI18N
        inputTextArea.setRows(5);
        inputTextArea.setText("Enter text here...");
        inputTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputTextAreaFocusGained();
            }
        });
        inputTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputTextAreaKeyReleased();
            }
        });
        jScrollPane3.setViewportView(inputTextArea);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(10, 50, 620, 140);

        pasteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/paste.png"))); // NOI18N
        pasteButton.setToolTipText("Paste Text");
        pasteButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pasteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pasteButton.addActionListener(evt -> pasteButtonActionPerformed());
        jPanel2.add(pasteButton);
        pasteButton.setBounds(40, 10, 30, 30);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(nameLabel))
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGap(518, 518, 518)
                                                .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGap(528, 528, 528)
                                                .addComponent(companyLabel)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(nameLabel)
                                .addGap(13, 13, 13)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(companyLabel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTextAreaKeyReleased() {//GEN-FIRST:event_inputTextAreaKeyReleased
        if (inputTextArea.getText().equals("")) {
            inputTextArea.setText("Enter text here...");
            inputTextArea.setSelectionStart(0);
            inputTextArea.setSelectionEnd(inputTextArea.getText().length());
        }
    }//GEN-LAST:event_inputTextAreaKeyReleased

    private void inputTextAreaFocusGained() {//GEN-FIRST:event_inputTextAreaFocusGained
        if (inputTextArea.getText().equals("Enter text here...")) {
            inputTextArea.setSelectionStart(0);
            inputTextArea.setSelectionEnd(inputTextArea.getText().length());
        }
    }//GEN-LAST:event_inputTextAreaFocusGained

    private void encryptButtonActionPerformed() {//GEN-FIRST:event_encryptButtonActionPerformed
        String password;
        PasswordDialog pDialog = new PasswordDialog(this);
        pDialog.setVisible(true);
        password = pDialog.getPassword();

        String result;
        if (!password.isEmpty()) {
            result = EncryptService.encryptMessage(inputTextArea.getText(), password);
            outputTextArea.setText(result);
        }

    }//GEN-LAST:event_encryptButtonActionPerformed

    private void inputTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            encryptButtonActionPerformed();
            evt.consume();
        }
    }//GEN-LAST:event_inputTextAreaKeyPressed

    private void companyLabelMousePressed() {//GEN-FIRST:event_companyLabelMousePressed
        new About(this).setVisible(true);
    }//GEN-LAST:event_companyLabelMousePressed

    private void pasteButtonActionPerformed() {//GEN-FIRST:event_pasteButtonActionPerformed
        //Paste from Clipboard
    }//GEN-LAST:event_pasteButtonActionPerformed

    private void copyButtonActionPerformed() {//GEN-FIRST:event_copyButtonActionPerformed
        //Copy to clipboard
    }//GEN-LAST:event_copyButtonActionPerformed

    private void openButtonActionPerformed() {//GEN-FIRST:event_openButtonActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getPath();
            File file = new File(path);

            try (FileReader fileReader = new FileReader(file);
                 BufferedReader bReader = new BufferedReader(fileReader)) {
                String line;
                StringBuilder txt = new StringBuilder();
                if ((line = bReader.readLine()) != null){
                    txt = new StringBuilder(line);
                }
                while ((line = bReader.readLine()) != null) {
                    txt.append("\n").append(line);
                }
                inputTextArea.setText(txt.toString());

            } catch (IOException ignored) {

            }
            outputTextArea.setText("");
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void saveButtonActionPerformed() {//GEN-FIRST:event_saveButtonActionPerformed
        boolean isSave;
        boolean isReplace = true;
        String path;
        File file;

        do {
            isSave = fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION;
            path = fileChooser.getSelectedFile().getPath();
            if (fileChooser.getFileFilter() == filter && !path.endsWith(".txt")) {
                path += ".txt";
            }
            file = new File(path);
            if (isSave && file.isFile()) { //if already Exists
                isReplace = JOptionPane.YES_OPTION == JOptionPane.showOptionDialog(fileChooser, "Overwrite the file", "Overrite",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE,
                        null, null, null);
            }

        } while (isSave && !isReplace);

        if (isSave) {
            try (FileWriter fileWriter = new FileWriter(file)) {
                fileWriter.write(outputTextArea.getText());
            } catch (IOException ignored) {

            }
        }

        System.out.println(path);
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Home().setVisible(true));
    }

    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JTextArea outputTextArea;
    // End of variables declaration//GEN-END:variables
}
